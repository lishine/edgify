{"version":3,"sources":["theme.ts","App.tsx","index.tsx"],"names":["theme","defaultTheme","radii","xl","xxl","Comp","forceUpdate","useReducer","console","log","ThemeProvider","config","refetchAllOnWindowFocus","CSSReset","styles","body","backgroundColor","Array","keys","map","i","key","Button","onClick","rootElement","document","getElementById","render","App"],"mappings":"uPAIO,MAAMA,EAAK,eACbC,IADa,CAEhBC,MAAM,eAAMD,IAAaC,MAApB,CAA2BC,GAAI,OAAQC,IAAK,WCM7CC,KAAO,IAEJ,8BAAO,GAGD,aACb,MAAMC,EAAcC,qBAAW,SAAY,IAAI,GAE/C,OADAC,QAAQC,IAAI,iBAEV,kBAACC,EAAA,EAAD,CAAeV,MAAOA,GACpB,kBAAC,IAAD,CAA0BW,OAAQ,CAAEC,yBAAyB,IAC3D,kBAACC,EAAA,EAAD,MACA,kBAAC,IAAD,CAAQC,OAAQ,CAAEC,KAAM,CAAEC,gBAAiB,YAE3C,6BACG,IAAIC,MAAM,KAAMC,QAAQC,IAAKC,GAC5B,kBAACf,KAAD,CAAMgB,IAAKD,MAIf,kBAACE,EAAA,EAAD,CAAQC,QAASjB,GAAjB,mBCzBR,MAAMkB,EAAcC,SAASC,eAAe,QAU5CC,iBAAO,gBAACC,IAAD,MAASJ,K","file":"static/js/main.7048bf6b.chunk.js","sourcesContent":["import { theme as defaultTheme } from '@chakra-ui/core'\n\n// console.log(JSON.stringify(defaultTheme, 0, 2))\n\nexport const theme = {\n  ...defaultTheme,\n  radii: { ...defaultTheme.radii, xl: '1rem', xxl: '2rem' },\n}\n","import React, { memo, useState, useReducer } from 'react'\n// import { Profiler } from 'react'\nimport { Button } from '@chakra-ui/core'\n\nimport { ThemeProvider, CSSReset } from '@chakra-ui/core'\nimport { Global } from '@emotion/core'\nimport { ReactQueryConfigProvider } from 'react-query'\n\nimport { theme } from './theme'\n\nimport { Gallery } from './Gallery/Gallery'\n\nconst Comp = () => {\n  //   console.log('rendering i', i)\n  return <span>{1}</span>\n}\n\nexport default () => {\n  const forceUpdate = useReducer(() => ({}), {})[1] as () => void\n  console.log('rendering App')\n  return (\n    <ThemeProvider theme={theme}>\n      <ReactQueryConfigProvider config={{ refetchAllOnWindowFocus: false }}>\n        <CSSReset />\n        <Global styles={{ body: { backgroundColor: 'white' } }} />\n        {/* <Profiler id='Under test' onRender={(params) => console.log(JSON.stringify(params, null, 2))}> */}\n        <div>\n          {[...Array(1000).keys()].map((i: number) => (\n            <Comp key={i} />\n          ))}\n        </div>\n        {/* </Profiler> */}\n        <Button onClick={forceUpdate}>force update</Button>\n        {/* <Gallery /> */}\n      </ReactQueryConfigProvider>\n    </ThemeProvider>\n  )\n}\n","import * as React from 'react'\nimport { render } from 'react-dom'\n// import { unstable_trace as trace } from 'scheduler/tracing'\n// import { Profiler } from 'react'\n\nimport App from './App'\n\nconst rootElement = document.getElementById('root')\n// trace('initial render', performance.now(), () =>\n//   render(\n//     <Profiler id='initial render' onRender={(params) => console.log(JSON.stringify(params, null, 2))}>\n//       <App />\n//     </Profiler>,\n//     rootElement\n//   )\n// )\n\nrender(<App />, rootElement)\n"],"sourceRoot":""}